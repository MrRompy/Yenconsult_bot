from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from config import ADMIN_ID
from keyboards import main_menu

router = Router()

# –ì–ª–æ–±–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ ID –∫–ª–∏–µ–Ω—Ç–æ–≤ –¥–ª—è –æ—Ç–≤–µ—Ç–æ–≤ –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞
admin_reply_targets = {}

# === 1. –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –≤—ã–±–æ—Ä –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è === #
@router.message(F.text == "/start")
async def start_quiz(message: Message):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ü–µ—Ä–µ—Å–∞–¥–∫–∞ –≤–æ–ª–æ—Å—Å—è", callback_data="hair")],
        [InlineKeyboardButton(text="–ü–µ—Ä–µ—Å–∞–¥–∫–∞ –±–æ—Ä–æ–¥–∏", callback_data="beard")],
        [InlineKeyboardButton(text="–ü–µ—Ä–µ—Å–∞–¥–∫–∞ –±—Ä—ñ–≤", callback_data="brows")]
    ])
    await message.answer(
        "–ü—Ä–∏–≤—ñ—Ç! –ú–µ–Ω–µ –∑–≤–∞—Ç–∏ –í—ñ–∫—Ç–æ—Ä—ñ—è, —è –º–µ–¥–∏—á–Ω–∏–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç üíô\n"
        "–ü—ñ–¥–∫–∞–∂—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞, —â–æ —Å–∞–º–µ –≤–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å:",
        reply_markup=keyboard
    )


# === 2. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∫–∞–∂–¥–æ–º—É –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é === #
@router.callback_query(F.data.in_(["hair", "beard", "brows"]))
async def procedure_info(callback: CallbackQuery):
    data = {
        "hair":
            "üîπ –ü–µ—Ä–µ—Å–∞–¥–∫–∞ –≤–æ–ª–æ—Å—Å—è –≤ –ö–∏—î–≤—ñ –∑ —Ç—É—Ä–µ—Ü—å–∫–∏–º–∏ –ª—ñ–∫–∞—Ä—è–º–∏\n\n"
            "üí∞ –í–∞—Ä—Ç—ñ—Å—Ç—å: 2800 ‚Ç¨\n–ú–µ—Ç–æ–¥: FUE –∞–±–æ DHI (–º–∞–∫—Å–∏–º—É–º –≥—Ä–∞—Ñ—Ç)\n\n"
            "–£ –≤–∞—Ä—Ç—ñ—Å—Ç—å –≤–∫–ª—é—á–µ–Ω–æ:\n"
            "‚Ä¢ –æ–ø–µ—Ä–∞—Ü—ñ—è –∑ –ø–µ—Ä–µ—Å–∞–¥–∫–∏ –≤—ñ–¥ 2000 –¥–æ 5500 –≥—Ä–∞—Ñ—Ç—ñ–≤;\n"
            "‚Ä¢ —É—Å—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –∞–Ω–∞–ª—ñ–∑–∏ –ø–µ—Ä–µ–¥ –æ–ø–µ—Ä–∞—Ü—ñ—î—é;\n"
            "‚Ä¢ –º–∏—Ç—Ç—è –≥–æ–ª–æ–≤–∏ 10 –¥–Ω—ñ–≤ –ø—ñ—Å–ª—è –æ–ø–µ—Ä–∞—Ü—ñ—ó;\n"
            "‚Ä¢ –º–µ–¥–∏–∫–∞–º–µ–Ω—Ç–∏, –≤—ñ—Ç–∞–º—ñ–Ω–∏ —Ç–∞ –∑–∞—Å–æ–±–∏ –¥–æ–≥–ª—è–¥—É;\n"
            "‚Ä¢ 2 —Å–µ–∞–Ω—Å–∏ PRP;\n"
            "‚Ä¢ —Å—É–ø—Ä–æ–≤—ñ–¥ —É–∫—Ä–∞—ó–Ω–æ–º–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞;\n"
            "‚Ä¢ –≥–∞—Ä–∞–Ω—Ç—ñ–π–Ω–∏–π —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç;\n"
            "‚Ä¢ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞ 24/7 –ø—Ä–æ—Ç—è–≥–æ–º —Ä–æ–∫—É.\n\n"
            "–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—è –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∞ üíô\n\n"
            "–ë–∞–∂–∞—î—Ç–µ –æ—Ç—Ä–∏–º–∞—Ç–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é?",
            
        "beard":
            "üîπ –ü–µ—Ä–µ—Å–∞–¥–∫–∞ –±–æ—Ä–æ–¥–∏ –≤ –ö–∏—î–≤—ñ –∑ —Ç—É—Ä–µ—Ü—å–∫–∏–º–∏ –ª—ñ–∫–∞—Ä—è–º–∏\n\n"
            "üí∞ –í–∞—Ä—Ç—ñ—Å—Ç—å: 2800 ‚Ç¨\n–ú–µ—Ç–æ–¥: DHI (–º–∞–∫—Å–∏–º—É–º –≥—Ä–∞—Ñ—Ç)\n\n"
            "–£ –≤–∞—Ä—Ç—ñ—Å—Ç—å –≤–∫–ª—é—á–µ–Ω–æ:\n"
            "‚Ä¢ –æ–ø–µ—Ä–∞—Ü—ñ—è –∑ –ø–µ—Ä–µ—Å–∞–¥–∫–∏ –±–æ—Ä–æ–¥–∏ –≤—ñ–¥ 1500 –¥–æ 3500 –≥—Ä–∞—Ñ—Ç—ñ–≤;\n"
            "‚Ä¢ —É—Å—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –∞–Ω–∞–ª—ñ–∑–∏ –ø–µ—Ä–µ–¥ –æ–ø–µ—Ä–∞—Ü—ñ—î—é;\n"
            "‚Ä¢ –º–∏—Ç—Ç—è –±–æ—Ä–æ–¥–∏ 10 –¥–Ω—ñ–≤ –ø—ñ—Å–ª—è –æ–ø–µ—Ä–∞—Ü—ñ—ó;\n"
            "‚Ä¢ –º–µ–¥–∏–∫–∞–º–µ–Ω—Ç–∏, –≤—ñ—Ç–∞–º—ñ–Ω–∏ —Ç–∞ –∑–∞—Å–æ–±–∏ –¥–æ–≥–ª—è–¥—É;\n"
            "‚Ä¢ 2 —Å–µ–∞–Ω—Å–∏ PRP;\n"
            "‚Ä¢ —Å—É–ø—Ä–æ–≤—ñ–¥ —É–∫—Ä–∞—ó–Ω–æ–º–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞;\n"
            "‚Ä¢ –≥–∞—Ä–∞–Ω—Ç—ñ–π–Ω–∏–π —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç;\n"
            "‚Ä¢ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞ 24/7 –ø—Ä–æ—Ç—è–≥–æ–º —Ä–æ–∫—É.\n\n"
            "–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—è –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∞ üíô\n\n"
            "–ë–∞–∂–∞—î—Ç–µ –æ—Ç—Ä–∏–º–∞—Ç–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é?",
            
        "brows":
            "üîπ –ü–µ—Ä–µ—Å–∞–¥–∫–∞ –±—Ä—ñ–≤ –≤ –ö–∏—î–≤—ñ –∑ —Ç—É—Ä–µ—Ü—å–∫–∏–º–∏ –ª—ñ–∫–∞—Ä—è–º–∏\n\n"
            "üí∞ –í–∞—Ä—Ç—ñ—Å—Ç—å: 1500 ‚Ç¨\n–ú–µ—Ç–æ–¥: DHI (–º–∞–∫—Å–∏–º—É–º –≥—Ä–∞—Ñ—Ç)\n\n"
            "–£ –≤–∞—Ä—Ç—ñ—Å—Ç—å –≤–∫–ª—é—á–µ–Ω–æ:\n"
            "‚Ä¢ –æ–ø–µ—Ä–∞—Ü—ñ—è –∑ –ø–µ—Ä–µ—Å–∞–¥–∫–∏ –±—Ä—ñ–≤ –≤—ñ–¥ 800 –¥–æ 1500 –≥—Ä–∞—Ñ—Ç—ñ–≤;\n"
            "‚Ä¢ —É—Å—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –∞–Ω–∞–ª—ñ–∑–∏ –ø–µ—Ä–µ–¥ –æ–ø–µ—Ä–∞—Ü—ñ—î—é;\n"
            "‚Ä¢ –º–∏—Ç—Ç—è –±—Ä—ñ–≤ 10 –¥–Ω—ñ–≤ –ø—ñ—Å–ª—è –æ–ø–µ—Ä–∞—Ü—ñ—ó;\n"
            "‚Ä¢ –º–µ–¥–∏–∫–∞–º–µ–Ω—Ç–∏, –≤—ñ—Ç–∞–º—ñ–Ω–∏ —Ç–∞ –∑–∞—Å–æ–±–∏ –¥–æ–≥–ª—è–¥—É;\n"
            "‚Ä¢ 2 —Å–µ–∞–Ω—Å–∏ PRP;\n"
            "‚Ä¢ —Å—É–ø—Ä–æ–≤—ñ–¥ —É–∫—Ä–∞—ó–Ω–æ–º–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞;\n"
            "‚Ä¢ –≥–∞—Ä–∞–Ω—Ç—ñ–π–Ω–∏–π —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç;\n"
            "‚Ä¢ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞ 24/7 –ø—Ä–æ—Ç—è–≥–æ–º —Ä–æ–∫—É.\n\n"
            "–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—è –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∞ üíô\n\n"
            "–ë–∞–∂–∞—î—Ç–µ –æ—Ç—Ä–∏–º–∞—Ç–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é?",
            
    }
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–¢–∞–∫", callback_data="yes")],
        [InlineKeyboardButton(text="–ù—ñ", callback_data="no")]
    ])
    await callback.message.answer(data[callback.data], reply_markup=keyboard)
    await callback.answer()


# === 3. –î–∞ / –ù–µ—Ç === #
@router.callback_query(F.data == "yes")
async def consult_yes(callback: CallbackQuery):
    user = callback.from_user

    # –ö–Ω–æ–ø–∫–∞ "–í—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏"
    reply_btn = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üí¨ –í—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏", callback_data=f"reply_to:{user.id}")]
        ]
    )

    # –°–æ–æ–±—â–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç—É
    await callback.message.answer(
        "–°—É–ø–µ—Ä! üíô –Ø –ø—ñ–¥–∫–ª—é—á–∞—é –Ω–∞—à–æ–≥–æ –º–µ–¥–∏—á–Ω–æ–≥–æ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞ –í—ñ–∫—Ç–æ—Ä—ñ—é.\n\n"
        "–ê –≤–∏ —Ç–∏–º —á–∞—Å–æ–º, –±—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å —Ñ–æ—Ç–æ:\n"
        "‚Ä¢ —Å–ø–µ—Ä–µ–¥—É (–∞–Ω—Ñ–∞—Å)\n‚Ä¢ –∑–ª—ñ–≤–∞\n‚Ä¢ —Å–ø—Ä–∞–≤–∞\n‚Ä¢ –ø–æ—Ç–∏–ª–∏—Ü—è\n‚Ä¢ –∑–≤–µ—Ä—Ö—É –≥–æ–ª–æ–≤–∏\n\n"
        "–¶–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ –¥–ª—è –æ—Ü—ñ–Ω–∫–∏ –¥–æ–Ω–æ—Ä—Å—å–∫–æ—ó –∑–æ–Ω–∏ —Ç–∞ —Ç–æ—á–Ω–æ–≥–æ –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –≥—Ä–∞—Ñ—Ç—ñ–≤."
    )

    # –°–æ–æ–±—â–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π
    await callback.bot.send_message(
        ADMIN_ID,
        f"üîî –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á @{user.username or '–±–µ–∑ username'} —Ö–æ—á–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é.\n"
        f"üë§ –Ü–º'—è: {user.full_name}\nüÜî ID: {user.id}",
        reply_markup=reply_btn
    )

    await callback.answer()



@router.callback_query(F.data == "no")
async def consult_no(callback: CallbackQuery):
    await callback.message.answer(
        "–î–æ–±—Ä–µ! –Ø–∫—â–æ —É –≤–∞—Å –∑‚Äô—è–≤–ª—è—Ç—å—Å—è –∑–∞–ø–∏—Ç–∞–Ω–Ω—è, –∑–≤–µ—Ä—Ç–∞–π—Ç–µ—Å—è, —è –∑–∞–≤–∂–¥–∏ —Ä–∞–¥–∞ –¥–æ–ø–æ–º–æ–≥—Ç–∏ üíô\n\n"
        "–ü–µ—Ä–µ—Ö–æ–¥—å—Ç–µ –Ω–∞ –Ω–∞—à—ñ —Ä–µ—Å—É—Ä—Å–∏. –¢–∞–º –±–∞–≥–∞—Ç–æ –ø—Ä–∏–∫–ª–∞–¥—ñ–≤ –î–û/–ü–Ü–°–õ–Ø —Ç–∞ —Ä–µ–∞–ª—å–Ω–∏—Ö –≤—ñ–¥–≥—É–∫—ñ–≤ –ø–∞—Ü—ñ—î–Ω—Ç—ñ–≤\n"
        "üì∫ YouTube: https://www.youtube.com/@HairGlobalMedik.ua\n"
        "üì∏ Instagram: https://www.instagram.com/kyiv.hair.globalmedik"
    )
    await callback.answer()


# === 4. –§–æ—Ç–æ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞ === #
@router.message(F.photo)
async def handle_photo(message: Message):
    user = message.from_user
    caption = (
        f"üì∑ –§–æ—Ç–æ –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:\n"
        f"üë§ –Ü–º'—è: {user.full_name}\n"
        f"üîó Username: @{user.username or '–Ω–µ–º–∞—î'}\n"
        f"üÜî ID: {user.id}"
    )
    reply_btn = InlineKeyboardMarkup(
        inline_keyboard=[[
            InlineKeyboardButton(text="üí¨ –í—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏", callback_data=f"reply_to:{user.id}")
        ]]
    )
    await message.bot.send_photo(
        chat_id=ADMIN_ID,
        photo=message.photo[-1].file_id,
        caption=caption,
        reply_markup=reply_btn
    )


# === 5. –û—Ç–≤–µ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ === #
@router.callback_query(F.data.startswith("reply_to:"))
async def ask_reply(callback: CallbackQuery):
    try:
        parts = callback.data.split(":")
        if len(parts) != 2:
            await callback.message.answer("‚ùå –ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç callback data.")
            return
        user_id = int(parts[1])
        admin_reply_targets[callback.from_user.id] = user_id
        await callback.message.answer("‚úçÔ∏è –í–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç –¥–ª—è –∫–ª—ñ—î–Ω—Ç–∞:")
    except Exception as e:
        await callback.message.answer(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ:\n{e}")


@router.message()
async def handle_message(message: Message):
    user = message.from_user

    # –ú–µ–Ω–µ–¥–∂–µ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç –∫–ª–∏–µ–Ω—Ç—É
    if user.id == ADMIN_ID and user.id in admin_reply_targets:
        target_id = admin_reply_targets.pop(user.id)
        try:
            await message.bot.send_message(target_id, f"\n\n{message.text}")
            await message.answer("‚úÖ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –∫–ª—ñ—î–Ω—Ç—É.")
        except Exception as e:
            await message.answer(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç—É:\n{e}")
        return

    # –ö–ª–∏–µ–Ω—Ç –ø–∏—à–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ
    caption = (
        f"üì® –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:\n"
        f"üë§ –Ü–º'—è: {user.full_name}\n"
        f"üîó Username: @{user.username or '–Ω–µ–º–∞—î'}\n"
        f"üÜî ID: {user.id}\n\n"
        f"{message.text}"
    )
    reply_markup = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üí¨ –í—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏", callback_data=f"reply_to:{user.id}")]
        ]
    )
    await message.bot.send_message(ADMIN_ID, caption, reply_markup=reply_markup)
    await message.answer("–í—ñ–∫—Ç–æ—Ä—ñ—è –≤–∂–µ –ø—Ä—è–º—É—î –¥–æ –≤–∞—Å üå™ ‚Äî —É —Ä–æ–±–æ—á–∏–π —á–∞—Å –º–∏ –∑–∞–≤–∂–¥–∏ –Ω–∞ –∑–≤'—è–∑–∫—É.")